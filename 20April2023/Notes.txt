2. Iterative : while, do-while and for loop

while: 

syntax: 

while(test-condition){

//code

}

as long as the test condition is true, the loop will iterate which means on every 
test-condition success, the block of code gets executed.


  var i = 1;
        while (i <= 10) {
            console.log(i);
            i++;
        }


 var arr = ["user1", "user2", "user3", "user4", "user5"];
        var i = 0;
        while (i < arr.length) {
            console.log(arr[i]);
            i++;
        }

Problem Statement: 

Implement product management system using arrays and while loop.

<html>

<head>

</head>

<body>
    <center>
        <h1>Add Product</h1>
        <input type="text" id="pid" placeholder="enter pid"> <br><br>
        <input type="text" id="name" placeholder="enter name"> <br><br>
        <input type="number" id="price" placeholder="enter price"> <br><br>
        <input type="text" id="seller" placeholder="enter seller"> <br><br>
        <button onclick="addProduct()">Add Product</button>
    </center>

    <ul id="ul">

    </ul>

    <script>
        var products = [];
        function addProduct() {
            var pid = document.getElementById("pid").value;
            var name = document.getElementById("name").value;
            var price = document.getElementById("price").value;
            var seller = document.getElementById("seller").value;
            var product = {
                productId: pid,
                productName: name,
                price: price,
                seller: seller
            }
            console.log("product", product);
            products.push(product);
            console.log(products);
            showProducts();
        }
        function showProducts() {
            var ul = document.getElementById("ul");
            var index = 0;
            var listOfItems = "";
            while (index < products.length) {
                var obj = products[index];
                listOfItems = listOfItems + "<li>" + obj.productId + "&nbsp;&nbsp;&nbsp;" + obj.productName + "&nbsp;&nbsp;&nbsp;" + obj.price + "&nbsp;&nbsp;&nbsp;" + "<button>Delete</button>" + "</li>";
                index++;
            }
            ul.innerHTML = listOfItems;
        }
    </script>
</body>

</html>

Next Steps: 

1. Implement delete operation. 
2. Add edit button beside delete button 
3. when user clicks on edit button , then populate the product data on the product form.


3. Jump : return, continue and break
