Combinators:

descendant:

<html>

<head>

    <style>
        div p  {
            text-align: center
        }
    </style>

</head>

<body>

    <p>Paragraph 1</p>

    <div>
        <p>Paragraph 2</p>
        <p>Paragraph 3</p>

    </div>

    <p>Paragraph 4</p>


</body>

</html>


Child Selector (>):

<html>

<head>

    <style>
        div>p {
            text-align: center
        }
    </style>

</head>

<body>

    <p>Paragraph 1</p>

    <div>
        <p>Paragraph 2</p>
        <section>
            <p>Paragraph 5</p>
        </section>
        <p>Paragraph 3</p>

    </div>

    <p>Paragraph 4</p>


</body>

</html>


pseudo-class:

selector:pseudo-class {
  property: value;
}


<html>

<head>

    <style>
        img:hover {
            width: 205px;
            height: 155px;
        }
    </style>

</head>

<body>

    <img
        src="https://rukminim1.flixcart.com/image/200/200/k3q76a80/camera/a/9/y/sony-apsc-ilce-6100l-b-in5-mirrorless-original-imafm6msv5uzrmgt.jpeg?q=70">


</body>

</html>


Selector	Example	Example description

:active	a:active	Selects the active link
:checked	input:checked	Selects every checked <input> element
:disabled	input:disabled	Selects every disabled <input> element
:empty	p:empty	Selects every <p> element that has no children
:enabled	input:enabled	Selects every enabled <input> element
:first-child	p:first-child	Selects every <p> elements that is the first child of its parent
:first-of-type	p:first-of-type	Selects every <p> element that is the first <p> element of its parent
:focus	input:focus	Selects the <input> element that has focus
:hover	a:hover	Selects links on mouse over
:in-range	input:in-range	Selects <input> elements with a value within a specified range
:invalid	input:invalid	Selects all <input> elements with an invalid value
:lang(language)	p:lang(it)	Selects every <p> element with a lang attribute value starting with "it"
:last-child	p:last-child	Selects every <p> elements that is the last child of its parent
:last-of-type	p:last-of-type	Selects every <p> element that is the last <p> element of its parent
:link	a:link	Selects all unvisited links
:not(selector)	:not(p)	Selects every element that is not a <p> element
:nth-child(n)	p:nth-child(2)	Selects every <p> element that is the second child of its parent
:nth-last-child(n)	p:nth-last-child(2)	Selects every <p> element that is the second child of its parent, counting from the last child
:nth-last-of-type(n)	p:nth-last-of-type(2)	Selects every <p> element that is the second <p> element of its parent, counting from the last child
:nth-of-type(n)	p:nth-of-type(2)	Selects every <p> element that is the second <p> element of its parent
:only-of-type	p:only-of-type	Selects every <p> element that is the only <p> element of its parent
:only-child	p:only-child	Selects every <p> element that is the only child of its parent
:optional	input:optional	Selects <input> elements with no "required" attribute
:out-of-range	input:out-of-range	Selects <input> elements with a value outside a specified range
:read-only	input:read-only	Selects <input> elements with a "readonly" attribute specified
:read-write	input:read-write	Selects <input> elements with no "readonly" attribute
:required	input:required	Selects <input> elements with a "required" attribute specified
:root	root	Selects the document's root element
:target	#news:target	Selects the current active #news element (clicked on a URL containing that anchor name)
:valid	input:valid	Selects all <input> elements with a valid value
:visited	a:visited	Selects all visited links


pseudo-elements: 

selector::pseudo-element {
  property: value;
}


example:

<html>

<head>

    <style>
        p::first-line {
            color: red
        }

        p::first-letter {
            font-size: 40px;
        }
    </style>

</head>

<body>

    <p>The double colon replaced the single-colon notation for pseudo-elements in CSS3. This was an attempt from W3C to
        distinguish between pseudo-classes and pseudo-elements.The single-colon syntax was used for both pseudo-classes
        and pseudo-elements in CSS2 and CSS1
    </p>


</body>

</html>


selection:

<html>

<head>

    <style>
        p::selection {
            background-color: black;
            color: whitesmoke
        }
    </style>

</head>

<body>
    <p>Some paragraph!</p>
    <h1>Header 1</h1>
    <h2>Header 2</h2>
    <h3>Header 3</h3>


</body>

</html>


Problem Statement: 

Create a paragraph and add a selection pseudo element, 
p first letter should have bigger font,
 1 st line should be cursive.
<html>

<head>
    <style>
        p::selection{
            color:aquamarine;
            background-color: black;
        }

        p::first-line {
  font-family: cursive;
}

p::first-letter {
  font-size: 40px;
}
    </style>

</head>

<body>

    <p> Jennifer Herrity is a seasoned career services professional with 12+ years of experience in career coaching, recruiting and leadership roles with the purpose of helping others to find their best-fit jobs. She helps people navigate the job search process through one-on-one career coaching, webinars, workshops, articles and career advice videos on Indeed's YouTube channel.</p>
</body>

</html>

Page Responsiveness:

Page Responsiveness is the process of providing inputs to the web page to adjust according to the screen 
sizes. 

In css, we have @media queries to provide page responsiveness. 



